openapi: "3.0.0"

info:
  title: RadioPad Registry API
  version: "0.0.0"
servers:
  - url: /v1

paths:
  /accounts:
    get:
      tags: [Accounts]
      summary: List Accounts.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Paginated List of Accounts.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/_PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        $ref: '#/components/schemas/AccountList'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /players/{account}:
    get:
      operationId: api.players.search
      tags: [Players]
      summary: List Players belonging to an Account.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - name: account
          in: path
          required: true
          schema:
            type: string
          description: Player Account
          example: "briceburg"
      responses:
        '200':
          description: Paginated List of Players.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/_PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        $ref: '#/components/schemas/PlayerList'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        
  /players/{account}/{id}:
    get:
      operationId: api.players.get
      tags: [Players]
      summary: Get Player.
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
          description: Player Account
          example: "briceburg"
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Player Identifier
          example: "living-room"
      responses:
        '200':
          description: Player Details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  

  /stations:
    get:
      tags: [Stations]
      summary: List Station Presets.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Paginated List of Station Presets.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/_PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        $ref: '#/components/schemas/StationPresetList'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /stations/{id}:
    get:
      tags: [Stations]
      summary: Get Stations List.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the station preset to retrieve stations for.
      responses:
        '200':
          description: Station Preset Details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationList'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  parameters:
    Page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
      description: Page number of the results to fetch.
    PerPage:
      name: per_page
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10
      description: Number of items per page.

  responses:
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Not Found
    InternalServerError:
      description: An unexpected error occurred on the server.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Schema construction error
  schemas:
    Account:
      $ref: './schemas/Account.json#/definitions/Account'

    AccountList:
      $ref: './schemas/AccountList.json#/definitions/AccountList'

    Player:
      $ref: './schemas/Player.json#/definitions/Player'
      
    PlayerList:
      $ref: './schemas/PlayerList.json#/definitions/PlayerList'

    Station:
      $ref: './schemas/Station.json#/definitions/Station'

    StationList:
      $ref: './schemas/StationList.json#/definitions/StationList'

    StationPreset:
      $ref: './schemas/StationPreset.json#/definitions/StationPreset'

    StationPresetList:
      $ref: './schemas/StationPresetList.json#/definitions/StationPresetList'

    _PaginatedResponse:
      type: object
      properties:
        items:
          type: array
          description: List of items in the current page
          items: {}
        page:
          type: integer
          description: Current page number
        per_page:
          type: integer
          description: Number of items per page
        total:
          type: integer
          description: Total number of items
        total_pages:
          type: integer
          description: Total number of pages
      required: [page, per_page, total, total_pages]

